declare const SmartConfig_base: typeof import("event-emitter-for-miniprogram").default;
export class SmartConfig extends SmartConfig_base {
    constructor(apSsid: any, apBssid: any, apPassword: any, localIp: any, logger: any, encryptor: any);
    TAG: string;
    ONE_DATA_LEN: number;
    mSocketClient: any;
    mSocketServer: any;
    mApSsid: any;
    mApPassword: any;
    mApBssid: any;
    mEncryptor: any;
    mContext: any;
    mEsptouchResultList: any;
    mIsSuc: boolean;
    mIsInterrupt: boolean;
    mIsExecuted: boolean;
    mIsCancelled: any;
    mParameter: any;
    mBssidTaskSucCountMap: any;
    mEsptouchListener: any;
    mLocalIp: any;
    logger: any;
    __checkTaskValid(): boolean;
    /**
     * step1: 生成guide code 和 data code
     * step1: 广播发送guide code
     * step2: 监听udpserver中的端口接受到的数据是否满足要求
     * step3: 从收到正确的数据的来源中获取设备的地址信息，可能会有多个
     */
    start(expectTaskResultCount?: number): Promise<any>;
    startInNoPromise(expectTaskResultCount?: number): void;
    __executeInNoPromise(generator: any): void;
    __execute(generator: any): Promise<boolean>;
    __listenAsyn(): void;
    /**
     * @description 获取esptouch的结果list
     */
    __putEsptouchResult(isSuc: any, bssid: any, inetAddress: any, remoteInfo: any): void;
    __getEsptouchResultList(): any;
    interrupt(): Promise<void>;
    isCancelled(): any;
    setPackageBroadcast(broadcast: any): void;
}
export {};
