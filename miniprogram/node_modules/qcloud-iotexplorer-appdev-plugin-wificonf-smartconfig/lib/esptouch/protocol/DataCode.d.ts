/**
 * one data format:(data code should have 2 to 65 data)
 * <p>
 * control byte       high 4 bits    low 4 bits
 * 1st 9bits:       0x0             crc(high)      data(high)
 * 2nd 9bits:       0x1                sequence header
 * 3rd 9bits:       0x0             crc(low)       data(low)
 * <p>
 * sequence header: 0,1,2,...
 *
 * @author afunx
 */
export class DataCode {
    /**
     * Constructor of DataCode
     *
     * @param u8    the character to be transformed
     * @param index the index of the char
     */
    constructor(u8: any, index: any);
    DATA_CODE_LEN: number;
    INDEX_MAX: number;
    mSeqHeader: any;
    mDataHigh: any;
    mDataLow: any;
    mCrcHigh: any;
    mCrcLow: any;
    getBytes(): Int8Array;
    toString(): string;
    getU8s(): void;
}
