import FileSdk from './FileSdk';


import SparkMD5 from 'spark-md5';
export class FileSdkForMiniProgram extends FileSdk {
  handleUpload(file, productId): Promise<string> {
    return new Promise((resolve, reject) => {
      const fs = wx.getFileSystemManager();
      fs.readFile({
        filePath: file.path, // 选择图片返回的相对路径
        success: async (res) => {
          const spark = new SparkMD5.ArrayBuffer();
          spark.append(res.data as ArrayBuffer);
          const hash = spark.end(false);
          // eslint-disable-next-line @typescript-eslint/naming-convention
          const { UploadUrl } = await super.getResourceUploadURL(file, hash, productId);
          wx.request({
            url: UploadUrl,
            method: 'PUT',
            data: fs.readFileSync(file.path),
            success: async () => {
              try {
                // eslint-disable-next-line @typescript-eslint/naming-convention
                const { ResourceName } = await super.createResource(file, hash, productId);
                if (ResourceName) {
                  wx.showToast({
                    title: '文件上传成功',
                    icon: 'success',
                    duration: 5000,
                  });
                  resolve(ResourceName);
                }
              } catch (e) {
                reject(e.msg);
                wx.showToast({
                  title: `${e.msg}`,
                  icon: 'error',
                  duration: 5000,
                });
              }
            },
          });
        },
      });
    });
  }
}
