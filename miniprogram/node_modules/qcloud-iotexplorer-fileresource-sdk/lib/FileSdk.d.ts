export interface ResourceUploadResponse {
    RequestId?: string;
    ResourceName?: string;
    UploadUrl?: string;
}
export interface ResourceCreateResponse {
    RequestId?: string;
    ResourceName?: string;
}
declare abstract class FileSdk {
    protected sdk: any;
    protected request: (action: any, params: any) => Promise<any>;
    constructor(sdk: any);
    getResourceUploadURL(file: any, hash: unknown, productId: string): Promise<ResourceUploadResponse>;
    createResource(file: any, hash: unknown, productId: string): Promise<ResourceCreateResponse>;
    getDeviceResource(ResourceName: any, deviceId: string): Promise<string>;
    controlDeviceResource(ResourceName: string, deviceId: string): Promise<void>;
    abstract handleUpload(UploadUrl: string, file: any, hash: string): void;
}
export default FileSdk;
