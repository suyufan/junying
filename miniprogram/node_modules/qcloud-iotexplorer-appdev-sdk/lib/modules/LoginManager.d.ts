/**
 * 通过 token 初始化用户登录态，并在登录态过期后销毁
 */
import EventEmitter from 'event-emitter-for-miniprogram';
import { AppDevSdk } from '../AppDevSdk';
export declare const accessTokenStorageKey = "__qcloud-iotexplorer-appdev-sdk-accessToken";
export interface LoginManagerOptions {
    getAccessToken: () => Promise<{
        Token: string;
        ExpireAt?: number;
    }>;
    appKey?: string;
    enableAccessTokenCache?: boolean;
}
export interface UserInfo {
    Avatar: string;
    CountryCode: string;
    Email: string;
    NickName: string;
    PhoneNumber: string;
    UserID: string;
}
export declare class LoginManager extends EventEmitter {
    accessToken: string;
    appKey?: string;
    isLogin: boolean;
    enableAccessTokenCache: boolean;
    userInfo: UserInfo;
    getAccessToken: LoginManagerOptions['getAccessToken'];
    sdk: AppDevSdk;
    _accessTokenStorageKey: string;
    _loginPromise: any;
    constructor(sdk: AppDevSdk, { getAccessToken, appKey, enableAccessTokenCache }: LoginManagerOptions);
    login({ reload }?: {
        reload?: boolean;
    }): Promise<any>;
    get userId(): string;
    get nickName(): string;
    checkLogin(): any;
    logout(): Promise<void>;
    reLogin(): Promise<void>;
}
