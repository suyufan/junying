export declare enum EventTypes {
    Ready = "ready",
    Error = "error",
    LoginStateChange = "LoginStateChange",
    WsError = "wsError",
    WsClose = "wsClose",
    WsPush = "wsPush",
    WsReport = "wsReport",
    WsControl = "wsControl",
    WsStatusChange = "wsStatusChange",
    WsDeviceBind = "wsDeviceBind",
    WsDeviceUnbind = "wsDeviceUnbind",
    WsEventReport = "wsEventReport",
    WsActionReport = "wsActionReport",
    WsActionPush = "wsActionPush",
    WsSubDeviceChange = "wsSubDeviceChange",
    WsSubDeviceBind = "wsSubDeviceBind",
    WsSubDeviceUnbind = "wsSubDeviceUnbind"
}
export declare enum ErrorCode {
    WX_API_NEED_AUTH = "WX_API_NEED_AUTH",
    GET_USERINFO_NEED_AUTH = "GET_USERINFO_NEED_AUTH",
    WX_API_FAIL = "WX_API_FAIL",
    VERIFY_LOGIN_FAIL = "VERIFY_LOGIN_FAIL",
    INTERNAL_ERROR = "INTERNAL_ERROR"
}
export declare enum ConnectDeviceErrorCode {
    UDP_NOT_RESPONSED = "UDP_NOT_RESPONSED",
    SSID_NOT_MATCH = "SSID_NOT_MATCH",
    CONNECT_SOFTAP_FAIL = "CONNECT_SOFTAP_FAIL",
    CONNECT_TARGET_WIFI_FAIL = "CONNECT_TARGET_WIFI_FAIL",
    UDP_ERROR = "UDP_ERROR",
    DEVICE_ERROR = "DEVICE_ERROR",
    INVALID_UDP_RESPONSE = "INVALID_UDP_RESPONSE",
    DEVICE_CONNECT_MQTT_FAIL = "DEVICE_CONNECT_MQTT_FAIL",
    DEVICE_CONNECT_WIFI_FAIL = "DEVICE_CONNECT_WIFI_FAIL",
    ADD_DEVICE_FAIL = "ADD_DEVICE_FAIL",
    SEND_UDP_MSG_FAIL = "SEND_UDP_MSG_FAIL",
    QUERY_BIND_TOKEN_TIMEOUT = "QUERY_BIND_TOKEN_TIMEOUT",
    QUERY_BIND_TOKEN_FAIL = "QUERY_BIND_TOKEN_FAIL",
    DEVICE_RESP_TIMOUT = "DEVICE_RESP_TIMOUT",
    CONNECT_DEVICE_ERROR = "CONNECT_DEVICE_ERROR",
    SMART_CONFIG_FAIL = "SMART_CONFIG_FAIL",
    SMART_CONFIG_TIMEOUT = "SMART_CONFIG_TIMEOUT",
    SMART_CONFIG_INVALID_RESPONSE = "SMART_CONFIG_INVALID_RESPONSE"
}
export declare const SoftApErrorMsg: {
    UDP_NOT_RESPONSED: string;
    CONNECT_SOFTAP_FAIL: string;
    CONNECT_TARGET_WIFI_FAIL: string;
    UDP_ERROR: string;
    DEVICE_ERROR: string;
    INVALID_UDP_RESPONSE: string;
    DEVICE_CONNECT_MQTT_FAIL: string;
    DEVICE_CONNECT_WIFI_FAIL: string;
    ADD_DEVICE_FAIL: string;
    SEND_UDP_MSG_FAIL: string;
    QUERY_BIND_TOKEN_TIMEOUT: string;
    QUERY_BIND_TOKEN_FAIL: string;
};
export declare const SmartConfigErrorMsg: {
    UDP_NOT_RESPONSED: string;
    CONNECT_SOFTAP_FAIL: string;
    CONNECT_TARGET_WIFI_FAIL: string;
    UDP_ERROR: string;
    DEVICE_ERROR: string;
    INVALID_UDP_RESPONSE: string;
    DEVICE_CONNECT_MQTT_FAIL: string;
    DEVICE_CONNECT_WIFI_FAIL: string;
    ADD_DEVICE_FAIL: string;
    SEND_UDP_MSG_FAIL: string;
    QUERY_BIND_TOKEN_TIMEOUT: string;
    QUERY_BIND_TOKEN_FAIL: string;
} & {
    DEVICE_RESP_TIMOUT: string;
    CONNECT_DEVICE_ERROR: string;
    SMART_CONFIG_FAIL: string;
    SMART_CONFIG_TIMEOUT: string;
    SMART_CONFIG_INVALID_RESPONSE: string;
};
export declare enum ConnectDeviceStepCode {
    CONNECT_DEVICE_START = "CONNECT_DEVICE_START",
    CONNECT_SOFTAP_START = "CONNECT_SOFTAP_START",
    CONNECT_SOFTAP_SUCCESS = "CONNECT_SOFTAP_SUCCESS",
    CONNECT_SMARTCONFIG_START = "CONNECT_SMARTCONFIG_START",
    CONNECT_SMARTCONFIG_SUCCESS = "CONNECT_SMARTCONFIG_SUCCESS",
    CREATE_UDP_CONNECTION_START = "CREATE_UDP_CONNECTION_START",
    CREATE_UDP_CONNECTION_SUCCESS = "CREATE_UDP_CONNECTION_SUCCESS",
    SEND_TARGET_WIFIINFO_START = "SEND_TARGET_WIFIINFO_START",
    SEND_TARGET_WIFIINFO_SUCCESS = "SEND_TARGET_WIFIINFO_SUCCESS",
    GET_DEVICE_SIGNATURE_START = "GET_DEVICE_SIGNATURE_START",
    GET_DEVICE_SIGNATURE_SUCCESS = "GET_DEVICE_SIGNATURE_SUCCESS",
    CONNECT_TARGET_WIFI_START = "RECONNECT_TARGET_WIFI_START",
    CONNECT_TARGET_WIFI_SUCCESS = "RECONNECT_TARGET_WIFI_SUCCESS",
    ADD_DEVICE_START = "ADD_DEVICE_START",
    ADD_DEVICE_SUCCESS = "ADD_DEVICE_SUCCESS",
    CONNECT_DEVICE_SUCCESS = "CONNECT_DEVICE_SUCCESS",
    QUERY_TOKEN_STATE_START = "QUERY_TOKEN_STATE_START",
    QUERY_TOKEN_STATE_SUCCESS = "QUERY_TOKEN_STATE_SUCCESS",
    SMARTCONFIG_SEND_TOKEN_START = "SMARTCONFIG_SEND_TOKEN_START",
    SMARTCONFIG_SEND_TOKEN_SUCCESS = "SMARTCONFIG_SEND_TOKEN_SUCCESS"
}
export declare const SoftApStepMsg: {
    CONNECT_DEVICE_START: string;
    CONNECT_SOFTAP_START: string;
    CONNECT_SOFTAP_SUCCESS: string;
    CREATE_UDP_CONNECTION_START: string;
    CREATE_UDP_CONNECTION_SUCCESS: string;
    SEND_TARGET_WIFIINFO_START: string;
    SEND_TARGET_WIFIINFO_SUCCESS: string;
    GET_DEVICE_SIGNATURE_START: string;
    GET_DEVICE_SIGNATURE_SUCCESS: string;
    RECONNECT_TARGET_WIFI_START: string;
    RECONNECT_TARGET_WIFI_SUCCESS: string;
    ADD_DEVICE_START: string;
    ADD_DEVICE_SUCCESS: string;
    CONNECT_DEVICE_SUCCESS: string;
};
export declare const SmartConfigStepMsg: {
    CONNECT_DEVICE_START: string;
    CONNECT_SMARTCONFIG_START: string;
    CONNECT_SMARTCONFIG_SUCCESS: string;
    CREATE_UDP_CONNECTION_START: string;
    CREATE_UDP_CONNECTION_SUCCESS: string;
    SMARTCONFIG_SEND_TOKEN_START: string;
    SMARTCONFIG_SEND_TOKEN_SUCCESS: string;
    QUERY_TOKEN_STATE_START: string;
    QUERY_TOKEN_STATE_SUCCESS: string;
    ADD_DEVICE_START: string;
    ADD_DEVICE_SUCCESS: string;
    CONNECT_DEVICE_SUCCESS: string;
};
export declare const themeColorMap: {
    primary: string;
    success: string;
    grey: string;
    danger: string;
    weak: string;
    muted: string;
};
