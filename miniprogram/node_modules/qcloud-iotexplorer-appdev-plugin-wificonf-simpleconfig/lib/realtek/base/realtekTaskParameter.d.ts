export declare class SimpleConfigParam {
    static BIT(x: number): number;
    static PATTERN_VALID: number;
    static PATTERN_VALID_$LI$(): number;
    static PATTERN_HAS_END: number;
    static PATTERN_HAS_END_$LI$(): number;
    static PATTERN_USING_UDP_SOCKET: number;
    static PATTERN_USING_UDP_SOCKET_$LI$(): number;
    static PATTERN_USING_PLAIN: number;
    static PATTERN_USING_PLAIN_$LI$(): number;
    static MAX_PATTERN_NUM: number;
    static MAX_KEY_BUF_LEN: number;
    static MAX_PROFILE_BUF_LEN: number;
    static INTF_NAME_LEN: number;
    static MAX_CLIENTS_NUM: number;
    static PIN_LEN: number;
    static TLV_T_BYTES: number;
    static TLV_L_BYTES: number;
    static TLV_T_L_BYTES: number;
    static SC_NAME_LEN: number;
    static TAG_SSID_SC: number;
    static TAG_PASSWORD_SC: number;
    static TAG_IP_SC: number;
    static IFACE_FLAG_T: number;
    static IFACE_FLAG_T_$LI$(): number;
    static IP_ADDR_T: number;
    static IP_ADDR_T_$LI$(): number;
    static NET_MASK_T: number;
    static NET_MASK_T_$LI$(): number;
    static HW_ADDR_T: number;
    static HW_ADDR_T_$LI$(): number;
    static MULTICAST_SPORT: number;
    static MULTICAST_DPORT: number;
    static BROADCAST_SPORT: number;
    static BROADCAST_DPORT: number;
    static UNICAST_SPORT: number;
    static UNICAST_DPORT: number;
    static WAIT_UDP_TOTAL_MILLISECOND: number;
    static MCAST_ADDR_PREFIX: number;
    static SYNC_PKT_NUM: number;
    static SEQ_IDX: number;
    static CHECKSUM_IDX: number;
    static PATTERN_ID_IDX: number;
    static DATA_IDX: number;
    static MAGIC_IDX0: number;
    static MAGIC_IDX1: number;
    static MAGIC_IDX2: number;
    static MAGIC_IDX3: number;
    static RANDOM_IDX: number;
    static McastUDPBuffer: string;
    static Default_PIN: string;
    static Local_PIN: string;
    static DEFAULT_PATTERN_NAME: string;
    static Index: number;
    static Flag: number;
    static Name: Int8Array;
    static CHECKSUM(data: Int8Array, len: number): number;
}
export declare class RecvACK {
    static MaxCfgNum: number;
    static Mac: number[][];
    static Status: number[];
    static Type: number[][];
    static IPBuf: number[][];
    static IP: string[];
    static NameBuf: number[][];
    static Name: string[];
}
export declare class RtkSC {
    static PlainBuf: Int8Array;
    static PlainTotalLen: number;
    static PlainCurrent: Int8Array;
    static PlainCurrentLen: number[];
    static PlainCurrentLen_$LI$(): number[];
    static IntfName: number[];
    static IntfName_$LI$(): number[];
    static KeyBuf: number[];
    static KeyBuf_$LI$(): number[];
    static KeyLen: number;
    static CryptBuf: Int8Array;
    static CryptLen: number[];
    static CryptLen_$LI$(): number[];
    static PatternIndex: number;
    static MaxPatternNum: number;
    static PIN: string[];
    static PIN_$LI$(): string[];
    static HavePin: string;
    constructor();
}
export declare class Flag {
    static Version: number;
    static RequestFlag: number;
    static ResponseFlag: number;
    static Discover: number;
    static SaveProf: number;
    static DelProf: number;
    static RenameDev: number;
    static ReturnACK: number;
    static CfgSuccessACK: number;
    static DiscoverACK: number;
    static SaveProfACK: number;
    static DelProfACK: number;
    static RenameDevACK: number;
    static CfgSuccessACKSendBack: number;
    constructor();
}
export declare class UDPBcast {
    static IPAddr: string;
    static SrcPort: number;
    static DestPort: number;
    static SendMsg: Int8Array;
    static SendLen: number;
    constructor();
}
export declare class UDPMcast {
    static IPAddr: string;
    static SrcPort: number;
    static DestPort: number;
    static SendMsg: number[];
    static SendLen: number;
    static RequestIP: string;
    constructor();
}
export declare class UDPUcast {
    static IPAddr: string;
    static SrcPort: number;
    static DestPort: number;
    static SendMsg: Int8Array;
    static SendLen: number;
    static RecvLen: number;
    static MIN_ACK_LENGTH: number;
    static RecvBuf: Int8Array;
}
