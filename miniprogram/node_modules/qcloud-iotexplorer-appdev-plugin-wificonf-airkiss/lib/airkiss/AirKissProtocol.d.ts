export class AirKissProtocol {
    constructor(ssid: any, pwd: any);
    TARGET_ADDR: string;
    TARGET_PORT: number;
    NUMBERS_OF_PRECURSOR: number;
    NUMBERS_OF_MAGICCODE: number;
    DATAS_IN_ONE_SEQUENCE: number;
    SEND_PRECURSOR_DURATION_MS: number;
    INTERVAL_OF_PACKET_DATA: number;
    INTERVAL_OF_PACKET_GUIDE_CODE: number;
    USE_BITS: number;
    MAGIC_CODE_FLAG: number;
    SEQUENCE_HEADER_FLAG: number;
    DATA_FLAG: number;
    mOriData: any[];
    mValidPayload: any[];
    mMagicCodeField: any[];
    mPrefixCodeField: any[];
    mSequencesData: any[];
    socket: WifiConfUtils.UDPSocket;
    destroy(): void;
    checkRandFromFeedback(response: any): boolean;
    randomByte(): string;
    buildOriginalData(ssid: any, pwd: any): any[];
    rand: string;
    buildValidPayload(oriData: any): any[];
    getMagicCodeField(ssid: any, oriDataLen: any): any[];
    getPrefixCodeField(passwordLen: any): any[];
    getSequencesData(validPayload: any): any[];
    getSequenceField(seqIdx: any, validPayload: any, offset: any, len: any): any[];
    startPrecursorBroadcast(): Promise<number>;
    startPrecursorBroadcastUseSetTimeout(): Promise<any>;
    startDataBroadcast(): Promise<void>;
    startDataBroadcastUseSetTimeout(): Promise<any>;
}
import { utils as WifiConfUtils } from "qcloud-iotexplorer-appdev-plugin-wificonf-core";
