export declare const REPORT_EVENT_TYPE = "standard-ble";
export declare const DEVICE_HAS_BINDED = "DEVICE_HAS_BINDED";
export declare const DEVICE_NOT_BIND = "DEVICE_NOT_BIND";
export declare const DEVICE_WAITING_BIND = "DEVICE_WAITING_BIND";
export declare const DEVICE_HAS_CONNECTED = "DEVICE_HAS_CONNECTED";
export declare const DEVICE_STATE_MAP: {
    0: string;
    1: string;
    2: string;
    3: string;
};
export declare const DEVICE_INFO_WRITE_ID = "0000FFE1-65D0-4E20-B56A-E493541BA4E2";
export declare const DEVICE_DATA_WRITE_ID = "0000FFE2-65D0-4E20-B56A-E493541BA4E2";
export declare const DEVICE_EVENT_WRITE_ID = "0000FFE3-65D0-4E20-B56A-E493541BA4E2";
export declare const LL_OTA_WRITE_ID = "0000FFE4-65D0-4E20-B56A-E493541BA4E2";
export declare const PROPERTY_REPORT = "PROPERTY_REPORT";
export declare const CONTROL_DEVICE = "CONTROL_DEVICE";
export declare const CONTROL_ACTION = "CONTROL_ACTION";
export declare const REPORT_RESULT = "REPORT_RESULT";
export declare const CONTROL_REPLY = "CONTROL_REPLY";
export declare const GET_STATUS = "GET_STATUS";
export declare const EVENT_REPORT = "EVENT_REPORT";
export declare const EVENT_REPLY = "EVENT_REPLY";
export declare const ACTION_REPLY = "ACTION_REPLY";
export declare const UPDATE_REPLY = "UPDATE_REPLY";
export declare const UPDATE_DATA_REPLY = "UPDATE_DATA_REPLY";
export declare const UPDATE_DATA_CHECK_REPLY = "UPDATE_DATA_CHECK_REPLY";
export declare const UPDATE_REPLY_INVALID = "UPDATE_REPLY_INVALID";
export declare const BIND_AUTH = "BIND_AUTH";
export declare const SET_MTU_BEFORE_CONNECT = "SET_MTU_BEFORE_CONNECT";
export declare const BIND_AUTH_DETAIL = "BIND_AUTH_DETAIL";
export declare const BIND_AUTH_SUCCESS = "BIND_AUTH_SUCCESS";
export declare const BIND_AUTH_FAIL = "BIND_AUTH_FAIL";
export declare const CONNECT_AUTH = "CONNECT_AUTH";
export declare const DEVICE_INFO = "DEVICE_INFO";
export declare const ANDROID_SET_MTU = "ANDROID_SET_MTU";
export declare const CONNECT_RESULT_WRITE_SUCCESS = "CONNECT_RESULT_WRITE_SUCCESS";
export declare const CONNECT_RESULT_WRITE_FAIL = "CONNECT_RESULT_WRITE_FAIL";
export declare const UNBIND_RESULT_AUTH_SUCCESS = "UNBIND_RESULT_AUTH_SUCCESS";
export declare const UNBIND_RESULT_AUTH_FAIL = "UNBIND_RESULT_AUTH_FAIL";
export declare const UNBIND_AUTH = "UNBIND_AUTH";
export declare const TIME_SYNC = "TIME_SYNC";
export declare const CONTROL_ACTION_SUCCESS = "CONTROL_ACTION_SUCCESS";
export declare const WRITE_MTU_RESULT = "WRITE_MTU_RESULT";
export declare const MTU_MODULE_CALLBACK = "MTU_MODULE_CALLBACK";
export declare const VERIFY_SIGN_FAIL = "VERIFY_SIGN_FAIL";
export declare const APP_IS_READY = "APP_IS_READY";
export declare const APP_ON_IOS_DEVICE = "APP_ON_IOS_DEVICE";
export declare const GET_ADV_DATA = "GET_ADV_DATA";
export declare const GET_ADV_DATA_REPLY = "GET_ADV_DATA_REPLY";
export declare const HEARTBEAT_REQ = "HEARTBEAT_REQ";
export declare const HEARTBEAT_RESP = "HEARTBEAT_RESP";
export declare const NOTIFY_LOCAL_RSSI = "NOTIFY_LOCAL_RSSI";
export declare const GET_DEVICE_INFO = "GET_DEVICE_INFO";
export declare const SET_WIFI_MODE = "SET_WIFI_MODE";
export declare const SET_WIFI_INFO = "SET_WIFI_INFO";
export declare const SET_WIFI_CONNECT = "SET_WIFI_CONNECT";
export declare const SET_WIFI_TOKEN = "SET_WIFI_TOKEN";
export declare const GET_DEV_LOG = "GET_DEV_LOG";
export declare const SET_WIFI_MODE_RESULT = "SET_WIFI_MODE_RESULT";
export declare const SET_WIFI_INFO_RESULT = "SET_WIFI_INFO_RESULT";
export declare const SET_WIFI_CONNECT_RESULT = "SET_WIFI_CONNECT_RESULT";
export declare const SET_WIFI_TOKEN_RESULT = "SET_WIFI_TOKEN_RESULT";
export declare const GET_DEV_LOG_INFO = "GET_DEV_LOG_INFO";
export declare const STA_WIFI_MODE = "STA_WIFI_MODE";
export declare const NULL_WIFI_MODE = "NULL_WIFI_MODE";
export declare const GET_ADV_DATA_RESULT = "GET_ADV_DATA_RESULT";
export declare const WAIT_USER_CHECK_TIMEOUT = "WAIT_USER_CHECK_TIMEOUT";
export declare const GET_USER_CHECK_APPROVE = "GET_USER_CHECK_APPROVE";
export declare const GET_USER_CHECK_REJECT = "GET_USER_CHECK_REJECT";
export declare const USER_CHECK_TIMEOUT = "USER_CHECK_TIMEOUT";
export declare const USER_CHECK_TIMEOUT_CALLBACK = "USER_CHECK_TIMEOUT_CALLBACK";
export declare const GET_USER_CHECK_TIMEOUT_TIMEOUT = "GET_USER_CHECK_TIMEOUT_TIMEOUT";
export declare const GET_USER_CHECK_TIMEOUT_ERROR = "GET_USER_CHECK_TIMEOUT_ERROR";
export declare const GET_USER_CHECK_TIMEOUT_SUCCESS = "GET_USER_CHECK_TIMEOUT_SUCCESS";
export declare const WRITE_USER_CHECK_TIMEOUT = 1;
export declare const WRITE_USER_CHECK_CANCEL = 0;
export declare const REGISTER_DEVICE_INFO_REPLY = "REGISTER_DEVICE_INFO_REPLY";
export declare const SEND_REGISTER_DEVICE_PAYLOAD = "SEND_REGISTER_DEVICE_PAYLOAD";
export declare const WAIT_REGISTER_DEVICE_INFO_REPLY_TIMEOUT = "WAIT_REGISTER_DEVICE_INFO_REPLY_TIMEOUT";
export declare const REGISTER_DEVICE_INFO_REPLY_INVALID = "REGISTER_DEVICE_INFO_REPLY_INVALID";
export declare const REGISTER_DEVICE_ERROR = "REGISTER_DEVICE_ERROR";
export declare const REGISTER_DEVICE_SUCCESS = "REGISTER_DEVICE_SUCCESS";
export declare const UNBIND_REQUEST = "UnbindRequest";
export declare const UNBIND_RESPONSE = "UnbindResponse";
export declare const GET_DEVICE_NAME = "GET_DEVICE_NAME";
export declare const GET_DEVICE_NAME_WITH_REGISTER = "GET_DEVICE_NAME_WITH_REGISTER";
export declare const GET_DEVICE_NAME_WITH_REGISTER_FAILED = "GET_DEVICE_NAME_WITH_REGISTER_FAILED";
export declare const REQUEST_BIND = "REQUEST_BIND";
export declare const REQUEST_BIND_FAILED = "REQUEST_BIND_FAILED";
export declare const REQUEST_BIND_SUCCESS = "REQUEST_BIND_SUCCESS";
export declare const NOTIFY_BIND = "NOTIFY_BIND";
export declare const RESPONSE_BIND = "RESPONSE_BIND";
export declare const CONNECT_REQUEST = "CONNECT_REQUEST";
export declare const CONNECT_ACK = "CONNECT_ACK";
export declare const NOTIFY_BIND_FAILED = "NOTIFY_BIND_FAILED";
export declare const NOTIFY_BIND_SUCCESS = "NOTIFY_BIND_SUCCESS";
export declare const INDICATE_TYPE_MAP: {
    0: string;
    1: string;
    2: string;
    3: string;
    4: string;
    5: string;
    6: string;
    7: string;
    8: string;
    9: string;
    10: string;
    11: string;
    12: string;
    13: string;
    14: string;
    17: string;
    18: string;
    19: string;
    20: string;
    21: string;
    22: string;
    23: string;
    24: string;
    25: string;
    26: string;
    27: string;
    224: string;
    225: string;
    226: string;
    227: string;
    228: string;
};
export declare const BleErrorMsg: {
    1: string;
    2: string;
    3: string;
    4: string;
};
export declare const DEVICE_INFO_WRITE_PREFIX: {
    TIME_SYNC: string;
    CONNECT_AUTH: string;
    BIND_AUTH_SUCCESS: string;
    BIND_AUTH_FAIL: string;
    UNBIND_AUTH: string;
    CONNECT_RESULT_WRITE_SUCCESS: string;
    CONNECT_RESULT_WRITE_FAIL: string;
    UNBIND_RESULT_AUTH_SUCCESS: string;
    UNBIND_RESULT_AUTH_FAIL: string;
    WRITE_MTU_RESULT: string;
    USER_CHECK_TIMEOUT: string;
    SEND_REGISTER_DEVICE_PAYLOAD: string;
    APP_IS_READY: string;
    APP_ON_IOS_DEVICE: string;
    GET_DEVICE_INFO: string;
    SET_WIFI_MODE: string;
    SET_WIFI_INFO: string;
    SET_WIFI_CONNECT: string;
    SET_WIFI_TOKEN: string;
    GET_DEV_LOG: string;
    GET_DEVICE_NAME: string;
    REQUEST_BIND: string;
    NOTIFY_BIND: string;
    RESPONSE_BIND: string;
    CONNECT_REQUEST: string;
    CONNECT_ACK: string;
    UnbindRequest: string;
    UnbindResponse: string;
    GET_DEVICE_NAME_WITH_REGISTER: string;
    GET_ADV_DATA: string;
    HEARTBEAT_REQ: string;
    NOTIFY_LOCAL_RSSI: string;
};
export declare const DEVICE_DATA_WRITE_HEAD: {
    CONTROL_DEVICE: string;
    REPORT_RESULT: string;
    GET_STATUS: string;
    EVENT_REPLY: string;
    CONTROL_ACTION: string;
};
export declare const DEVICE_DATA_WRITE_SUFFIX: {
    CONTROL_DEVICE: string;
    REPORT_RESULT: string;
    GET_STATUS: string;
};
export declare const WIFI_MODE_MAP: {
    NULL_WIFI_MODE: number;
    STA_WIFI_MODE: number;
};
export declare const WIFI_LOG_TYPE_MAP: {
    ERROR_LOG: number;
    NORMAL_LOG: number;
};
export declare const ACTION_DESC: {
    CONTROL_DEVICE: string;
    REPORT_RESULT: string;
    GET_STATUS: string;
    EVENT_REPLY: string;
    CONTROL_ACTION: string;
    CONTROL_ACTION_SUCCESS: string;
    TIME_SYNC: string;
    CONNECT_AUTH: string;
    BIND_AUTH: string;
    BIND_AUTH_DETAIL: string;
    BIND_AUTH_SUCCESS: string;
    UNBIND_AUTH: string;
    CONNECT_RESULT_WRITE_SUCCESS: string;
    UNBIND_RESULT_AUTH_SUCCESS: string;
    APP_IS_READY: string;
    APP_ON_IOS_DEVICE: string;
    GET_ADV_DATA: string;
    HEARTBEAT_REQ: string;
    NOTIFY_LOCAL_RSSI: string;
};
export declare const BLE_IOT_DATA_TYPE_BOOL = "bool";
export declare const BLE_IOT_DATA_TYPE_INT = "int";
export declare const BLE_IOT_DATA_TYPE_STRING = "string";
export declare const BLE_IOT_DATA_TYPE_FLOAT = "float";
export declare const BLE_IOT_DATA_TYPE_ENUM = "enum";
export declare const BLE_IOT_DATA_TYPE_TIME = "timestamp";
export declare const BLE_IOT_DATA_TYPE_STRUCT = "struct";
export declare const BLE_IOT_DATA_TYPE_ARRAY = "array";
export declare const OTA_UPDATE_REQUEST = "OTA_UPDATE_REQUEST";
export declare const OTA_UPDATE_DATA = "OTA_UPDATE_DATA";
export declare const OTA_UPDATE_DATA_END = "OTA_UPDATE_DATA_END";
export declare const LL_OTA_WRITE_PREFIX: {
    OTA_UPDATE_REQUEST: string;
    OTA_UPDATE_DATA: string;
    OTA_UPDATE_DATA_END: string;
};
export declare const USER_NEED_LOGIN = "USER_NEED_LOGIN";
export declare const WAIT_CONNECT_REPLY_TIMEOUT = "WAIT_CONNECT_REPLY_TIMEOUT";
export declare const CONNECT_REPLY_INVALID = "CONNECT_REPLY_INVALID";
export declare const WAIT_UNBIND_REPLY_TIMEOUT = "WAIT_UNBIND_REPLY_TIMEOUT";
export declare const WAIT_CONTROL_DEVICE_REPLY_TIMEOUT = "WAIT_CONTROL_DEVICE_REPLY_TIMEOUT";
export declare const WAIT_CONTROL_ACTION_REPLY_TIMEOUT = "WAIT_CONTROL_ACTION_REPLY_TIMEOUT";
export declare const UNBIND_REPLY_INVALID = "UNBIND_REPLY_INVALID";
export declare const CONTROL_REPLY_INVALID = "CONTROL_REPLY_INVALID";
export declare const CONTROL_ACTION_ERROR = "CONTROL_ACTION_ERROR";
export declare const CONNECT_DEVICE_ERROR = "CONNECT_DEVICE_ERROR";
export declare const CANNOT_FIND_DEVICE = "CANNOT_FIND_DEVICE";
export declare const DEVICE_NAME_IS_EMPTY = "DEVICE_NAME_IS_EMPTY";
export declare const PSK_GET_ERROR = "PSK_GET_ERROR";
export declare const CONNECT_SIGN_AUTH_ERROR = "CONNECT_SIGN_AUTH_ERROR";
export declare const CONNECT_SIGN_VERIFY_ERROR = "CONNECT_SIGN_VERIFY_ERROR";
export declare const UNBIND_REPLY_ERROR = "UNBIND_REPLY_ERROR";
export declare const CONTROL_REPLY_CODE_INVALID = "CONTROL_REPLY_CODE_INVALID";
export declare const CONTROL_DEVICE_REPLY_ERROR = "CONTROL_DEVICE_REPLY_ERROR";
export declare const REPORT_RESULT_ERROR = "REPORT_RESULT_ERROR";
export declare const GET_STATUS_ERROR = "GET_STATUS_ERROR";
export declare const EVENT_REPLY_ERROR = "EVENT_REPLY_ERROR";
export declare const BLE_WRITE_ERROR = "BLE_WRITE_ERROR";
export declare const WAIT_GET_DEVICE_INFO_TIMEOUT = "WAIT_GET_DEVICE_INFO_TIMEOUT";
export declare const DEVICE_INFO_INVALID = "DEVICE_INFO_INVALID";
export declare const PROPERTY_REPORT_API_FAIL = "PROPERTY_REPORT_API_FAIL";
export declare const WAIT_GET_ADV_DATA_REPLY_TIMEOUT = "WAIT_GET_ADV_DATA_REPLY_TIMEOUT";
export declare const GET_ADV_DATA_FAIL = "GET_ADV_DATA_FAIL";
export declare const GET_ADV_DATA_REPLY_INVALID = "GET_ADV_DATA_REPLY_INVALID";
export declare const WAIT_GET_UPDATE_INFO_TIMEOUT = "WAIT_GET_UPDATE_INFO_TIMEOUT";
export declare const WAIT_MODULE_UPDATE_TIMEOUT = "WAIT_MODULE_UPDATE_TIMEOUT";
export declare const SET_WIFI_MODE_RESULT_INVALID = "SET_WIFI_MODE_RESULT_INVALID";
export declare const SET_WIFI_MODE_RESULT_TIMEOUT = "SET_WIFI_MODE_RESULT_TIMEOUT";
export declare const SET_WIFI_INFO_RESULT_INVALID = "SET_WIFI_INFO_INVALID";
export declare const SET_WIFI_INFO_RESULT_TIMEOUT = "SET_WIFI_INFO_TIMEOUT";
export declare const SET_WIFI_CONNECT_RESULT_INVALID = "SET_WIFI_CONNECT_RESULT_INVALID";
export declare const SET_WIFI_CONNECT_RESULT_TIMEOUT = "SET_WIFI_CONNECT_RESULT_TIMEOUT";
export declare const SET_WIFI_TOKEN_RESULT_INVALID = "SET_WIFI_TOKEN_RESULT_INVALID";
export declare const SET_WIFI_TOKEN_RESULT_TIMEOUT = "SET_WIFI_TOKEN_RESULT_TIMEOUT";
export declare const GET_DEV_LOG_INFO_INVALID = "GET_DEV_LOG_INFO_INVALID";
export declare const GET_DEV_LOG_INFO_TIMEOUT = "GET_DEV_LOG_INFO_TIMEOUT";
export declare const OTA_UPDATE_STEPS: {
    GET_OTA_UPDATE_INFO: string;
    GET_OTA_UPDATE_INFO_SUCCESS: string;
    DOWNLOADING_OTA_FILE: string;
    DOWNLOADING_OTA_FILE_DETAIL: string;
    DOWNLOAD_OTA_FILE_SUCCESS: string;
    REQUEST_MODULE_UPDATE_START: string;
    REQUEST_MODULE_UPDATE_SUCCESS: string;
    MODULE_UPDATE_CHECK_FILE_SUCCESS: string;
    SEND_UPDATE_DATA_START: string;
    SEND_UPDATE_DATA_DETAIL: string;
    SEND_UPDATE_DATA_SUCCESS: string;
    WAITING_MODULE_UPDATE: string;
    MODULE_UPDATE_SUCCESS: string;
};
export declare const OTA_UPDATE_STEPS_MESSAGE: {
    [x: string]: string;
};
export declare const OTA_UPDATE_ERRORS: {
    GET_OTA_INFO_FAIL: string;
    MODULE_VERSION_IS_UPDATED: string;
    MODULE_DONNOT_SUPPORT: string;
    USER_CANCEL_OTA_UPDATE: string;
    MODULE_DONNOT_ALLOW: string;
    MODULE_UPDATE_CHECK_FILE_FAIL: string;
    GET_FILE_CRC_ERROR: string;
    WAIT_GET_UPDATE_INFO_TIMEOUT: string;
    WAIT_MODULE_UPDATE_TIMEOUT: string;
    UPDATE_DATA_REPLAY_TIMEOUT: string;
    MODULE_UPDATE_FAIL: string;
    MODULE_UPDATE_CONNECT_TIMEOUT: string;
    BLE_CONNECTION_BREAK: string;
};
export declare const BLE_COMBO_ERRORS: {
    SET_WIFI_MODE_RESULT_INVALID: string;
    SET_WIFI_MODE_RESULT_TIMEOUT: string;
    SET_WIFI_INFO_INVALID: string;
    SET_WIFI_INFO_TIMEOUT: string;
    SET_WIFI_CONNECT_RESULT_INVALID: string;
    SET_WIFI_CONNECT_RESULT_TIMEOUT: string;
    SET_WIFI_TOKEN_RESULT_INVALID: string;
    SET_WIFI_TOKEN_RESULT_TIMEOUT: string;
    GET_DEV_LOG_INFO_INVALID: string;
    GET_DEV_LOG_INFO_TIMEOUT: string;
};
export declare const MODULE_UPDATE_REPLAY_CODE_MAP: {
    0: string;
    1: string;
};
export declare const MODULE_UPDATE_DATA_REPLAY_CODE_MAP: {
    1: string;
    0: string;
};
export declare const MODULE_UPDATE_REPLAY_DATA_CODE_MAP: {
    0: string;
    1: string;
    2: string;
};
export declare const WAIT_MODULE_UPDATE_CONNECT_TIMES = 5;
export declare const WAIT_MODULE_UPDATE_CONNECT_TIME_GAP = 2000;
export declare const UPDATE_WRITE_ERROR_TIMES_PER_CIRCLE = 5;
export declare const MAX_WRITE_DATA_WAIT_GAP = 200;
export declare const ERROR_MESSAGES: {
    REGISTER_DEVICE_ERROR: string;
    REGISTER_DEVICE_INFO_REPLY_INVALID: string;
    WAIT_REGISTER_DEVICE_INFO_REPLY_TIMEOUT: string;
    WAIT_GET_ADV_DATA_REPLY_TIMEOUT: string;
    GET_ADV_DATA_FAIL: string;
    GET_OTA_INFO_FAIL: string;
    MODULE_VERSION_IS_UPDATED: string;
    MODULE_DONNOT_SUPPORT: string;
    USER_CANCEL_OTA_UPDATE: string;
    MODULE_DONNOT_ALLOW: string;
    MODULE_UPDATE_CHECK_FILE_FAIL: string;
    GET_FILE_CRC_ERROR: string;
    WAIT_GET_UPDATE_INFO_TIMEOUT: string;
    WAIT_MODULE_UPDATE_TIMEOUT: string;
    UPDATE_DATA_REPLAY_TIMEOUT: string;
    MODULE_UPDATE_FAIL: string;
    MODULE_UPDATE_CONNECT_TIMEOUT: string;
    BLE_CONNECTION_BREAK: string;
    USER_NEED_LOGIN: string;
    CONTROL_ACTION_ERROR: string;
    CONNECT_DEVICE_ERROR: string;
    CANNOT_FIND_DEVICE: string;
    WAIT_CONNECT_REPLY_TIMEOUT: string;
    CONNECT_REPLY_INVALID: string;
    GET_USER_CHECK_REJECT: string;
    WAIT_USER_CHECK_TIMEOUT: string;
    GET_USER_CHECK_TIMEOUT_TIMEOUT: string;
    GET_USER_CHECK_TIMEOUT_ERROR: string;
    DEVICE_NAME_IS_EMPTY: string;
    PSK_GET_ERROR: string;
    CONNECT_SIGN_AUTH_ERROR: string;
    WAIT_UNBIND_REPLY_TIMEOUT: string;
    UNBIND_REPLY_INVALID: string;
    UNBIND_REPLY_ERROR: string;
    WAIT_CONTROL_DEVICE_REPLY_TIMEOUT: string;
    CONTROL_DEVICE_REPLY_ERROR: string;
    CONTROL_REPLY_INVALID: string;
    BIND_AUTH_FAIL: string;
    UNBIND_RESULT_AUTH_FAIL: string;
    CONNECT_RESULT_WRITE_FAIL: string;
    CONTROL_REPLY_CODE_INVALID: string;
    REPORT_RESULT_ERROR: string;
    GET_STATUS_ERROR: string;
    EVENT_REPLY_ERROR: string;
    BLE_WRITE_ERROR: string;
    WAIT_GET_DEVICE_INFO_TIMEOUT: string;
    DEVICE_INFO_INVALID: string;
    ID_TEMPLATE_IS_NOT_EXIT: string;
    TYPE_IN_MODULE_IS_WRONG: string;
    PROPERTY_REPORT_API_FAIL: string;
};
/**
 * 对应 LLSync 协议的 reply_result 枚举
 *
 * 设备端上报物模型属性后，小程序回复上报结果
 */
export declare enum PropertyReportReplyResult {
    /** 成功 */
    Success = 0,
    /** 失败 */
    Fail = 1,
    /**
     * 数据解析失败
     *
     * 可能原因: 设备端与云端定义的物模型属性不一致
     */
    ParseDataFail = 2
}
export declare const WRITE_DATA_CANCEL_ERROR_CODE = "BLE_WRITE_CHARACTERISTIC_CANCELLED";
export declare const MIN_ATT_MTU = 23;
export declare const ATT_MTU_TO_LLSYNC_MTU_DELTA = 3;
