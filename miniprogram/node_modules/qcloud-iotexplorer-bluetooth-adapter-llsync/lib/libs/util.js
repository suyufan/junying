"use strict";var _this=this;Object.defineProperty(exports,"__esModule",{value:!0}),exports.getMtuEncrypted=exports.randomBytesHex=exports.randomBytes=exports.formatArrayToReportString=exports.decrypt=exports.encrypt=exports.wrapEventHandler=exports.getUserIdentify=exports.base64toHEX=exports.hex2Base64=exports.log=exports.xorHalf=void 0;var tslib_1=require("tslib"),qcloud_iotexplorer_appdev_sdk_1=require("qcloud-iotexplorer-appdev-sdk"),qcloud_iotexplorer_common_libs_1=require("qcloud-iotexplorer-common-libs"),mp_debug_1=tslib_1.__importDefault(require("mp-debug")),_a=qcloud_iotexplorer_appdev_sdk_1.AppDevSdk.utils,byteUtil=_a.byteUtil,CryptoJS=_a.CryptoJS;function hex2Base64(e){return CryptoJS.enc.Hex.parse(e).toString(CryptoJS.enc.Base64)}function base64toHEX(e){return CryptoJS.enc.Base64.parse(e).toString(CryptoJS.enc.Hex)}function decrypt(e,r){var t=qcloud_iotexplorer_appdev_sdk_1.AppDevSdk.utils.CryptoJS;return t.AES.decrypt(t.enc.Base64.stringify(t.enc.Hex.parse(e)),t.enc.Hex.parse(r),{mode:t.mode.ECB,padding:t.pad.Pkcs7}).toString(t.enc.Hex)}function randomBytes(e){for(var r=[],t=0;t<e;t++)r.push(Math.floor(256*Math.random()));return r}function randomBytesHex(e){var r=randomBytes(e);return byteUtil.byteArrayToHex(r)}function getMtuEncrypted(e){return Math.max(16*Math.floor(e/16)-1,15)}exports.xorHalf=function(e){if(e.length%2!=0)throw new Error("invalid hexStr");var r=e.length/2,t=byteUtil.hexString2hexArray(e.slice(0,r)),o=byteUtil.hexString2hexArray(e.slice(r));return t.map((function(e,r){return byteUtil.byteToHex(parseInt(e,16)^parseInt(o[r],16))})).join("")},exports.log=mp_debug_1.default("adapter:llsync"),exports.hex2Base64=hex2Base64,exports.base64toHEX=base64toHEX,exports.getUserIdentify=function(e){return qcloud_iotexplorer_common_libs_1.get8ByteFromStr(qcloud_iotexplorer_common_libs_1.md5(e))},exports.wrapEventHandler=function(e,r){void 0===r&&(r="default");var t=qcloud_iotexplorer_common_libs_1.getTlvDataParser(r);return function(r){var o=r.data;console.log("event triggered",o);var n=t(o);console.log("----result",n,_this),null!==n&&e(n)}},exports.encrypt=qcloud_iotexplorer_common_libs_1.hmacSHA1,exports.decrypt=decrypt,exports.formatArrayToReportString=function(e){return e.join(",")},exports.randomBytes=randomBytes,exports.randomBytesHex=randomBytesHex,exports.getMtuEncrypted=getMtuEncrypted;
//# sourceMappingURL=util.js.map