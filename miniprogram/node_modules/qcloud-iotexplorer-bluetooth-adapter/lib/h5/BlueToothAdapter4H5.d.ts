import { BlueToothAdapter } from '../base';
import { BlueToothActions, BlueToothAdapterProps } from '../base/types';
export interface BlueToothActions4H5 extends Omit<BlueToothActions, 'registerDevice' | 'bindDevice'> {
    registerDevice?: BlueToothActions['registerDevice'];
    bindDevice?: BlueToothActions['bindDevice'];
}
export interface BlueToothAdapter4H5Props extends Omit<BlueToothAdapterProps, 'actions'> {
    actions: BlueToothActions4H5;
}
export declare class BlueToothAdapter4H5 extends BlueToothAdapter {
    _blueToothBridge: any;
    constructor({ h5Websocket, devMode, actions, ...props }: BlueToothAdapter4H5Props);
    /**
     * @override
     * 如果不覆写，这个函数被trigger的整个链路是：
     * na.onBluetoothDeviceFound => mp.onBluetoothDeviceFound => mp.getBluetoothDevices() =>
     * response to h5api.onBluetoothDeviceFound => h5.onBluetoothDeviceFound => h5.getBluetoothDevices() =>
     * mp.getBluetoothDevices()，会重复调用一次 getBluetoothDevices
     */
    onBluetoothDeviceFound({ devices }?: any): Promise<any>;
    private syncDeviceConnectStatus;
}
