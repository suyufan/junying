import { DeviceFilterFunction, DeviceAdapter4Mp } from 'qcloud-iotexplorer-bluetooth-adapter';
import * as constants from './constants';
export declare class BleComboEspDeviceAdapter extends DeviceAdapter4Mp {
    static serviceId: string;
    static PRODUCT_INITED: boolean;
    static BLECOMBO_ESP_PRODUCTID: string;
    static deviceFilter: DeviceFilterFunction;
    version: number;
    supportSendSplitDataMinimumVersion: number;
    sequence: number;
    waitVersionReplyTimeout: number;
    waitCustomDataTimeout: number;
    waitWiFiStateTimeout: number;
    MODE_TYPE_MAP: {
        4: string;
        5: string;
        7: string;
    };
    MODE_TYPE_MAP_V2: {
        15: string;
        19: string;
        16: string;
    };
    constructor(props: any);
    initSequence(): void;
    getSequence(): number;
    handleBLEMessage(hex: any): {
        type: any;
        subType: number;
        data: any;
    };
    handleMessageToEmitEvent({ type, subType, data }: {
        type: any;
        subType: any;
        data: any;
    }): void;
    connectDevice(params: any): Promise<void>;
    setMtu(mtu: any): Promise<any>;
    buildBleData({ mode, subType, data, }: {
        mode: any;
        subType: any;
        data: any;
    }): number[][];
    /**
     * 写入蓝牙数据
     * @param data {Array} 写入蓝牙的数据
     */
    writeData(data: any): Promise<void>;
    getVersion(): Promise<{
        version: number;
    }>;
    sendSwitchWiFi(): Promise<number[][]>;
    sendSsid(ssid: any): Promise<number[][]>;
    sendPassword(password: any): Promise<number[][]>;
    getCustomData({ mode, subType, data }: {
        mode: any;
        subType: any;
        data: any;
    }): Promise<unknown>;
    getWifiConnectState(): Promise<unknown>;
}
