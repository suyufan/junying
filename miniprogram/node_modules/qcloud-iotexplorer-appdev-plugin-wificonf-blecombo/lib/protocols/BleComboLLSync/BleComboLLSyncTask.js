"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BleComboLLSyncTask=void 0;var tslib_1=require("tslib"),constants_1=require("./constants"),BleComboTask_1=require("../BleComboTask"),BleComboLLSyncTask=function(e){function t(t){return e.call(this,t)||this}return tslib_1.__extends(t,e),t.prototype.setWiFiMode=function(){return tslib_1.__awaiter(this,void 0,void 0,(function(){var e;return tslib_1.__generator(this,(function(t){switch(t.label){case 0:if(!this.deviceAdapter)throw new Error("deviceAdapter option is not provided to this plugin");return[4,this.deviceAdapter.setWiFiMode()];case 1:if(e=t.sent(),this.logger.info("setWiFiModeSucc",{success:e}),!e)throw{code:"BLE_SET_WIFI_MODE_ERROR"};return[2]}}))}))},t.prototype.sendWiFiInfo=function(){return tslib_1.__awaiter(this,void 0,void 0,(function(){var e;return tslib_1.__generator(this,(function(t){switch(t.label){case 0:return[4,this.deviceAdapter.setWiFiInfo({ssid:this.ssid,password:this.password})];case 1:if(e=t.sent(),this.logger.info("sendWiFiInfo",{ssid:this.ssid,password:this.password,success:e}),!e)throw{code:"BLE_SEND_WIFI_INFO_ERROR",data:{ssid:this.ssid,password:this.password}};return[2]}}))}))},t.prototype.connectWifi=function(){return tslib_1.__awaiter(this,void 0,void 0,(function(){var e,t,s,i;return tslib_1.__generator(this,(function(o){switch(o.label){case 0:return o.trys.push([0,2,,3]),[4,this.deviceAdapter.sendConnectWiFiAndGetWiFiConnectState()];case 1:if(e=o.sent(),t=e.connected,s=e.ssid,console.log("----ssidData",s),t&&s.length&&s===this.ssid)return[2,s];throw{code:"BLE_WIFI_CONNECTION_ERROR",connected:t,ssidData:s};case 2:return i=o.sent(),console.error(i),[2,Promise.reject(tslib_1.__assign({msg:constants_1.BLE_COMBO_ERRORS[i.code]||""},i))];case 3:return[2]}}))}))},t.prototype.sendToken=function(){return tslib_1.__awaiter(this,void 0,void 0,(function(){var e,t;return tslib_1.__generator(this,(function(s){switch(s.label){case 0:return s.trys.push([0,2,,3]),[4,this.deviceAdapter.sendToken({token:this.token})];case 1:if(e=s.sent(),this.logger.info("sendTokenSuccess",{success:e,token:this.token,productId:this.deviceAdapter.productId,deviceName:this.deviceAdapter.deviceName}),!e)throw{code:"BLE_SEND_TOKEN_ERROR",token:this.token};return[2,{productId:this.deviceAdapter.productId,deviceName:this.deviceAdapter.deviceName}];case 2:return t=s.sent(),console.error(t),[2,Promise.reject(tslib_1.__assign({msg:constants_1.BLE_COMBO_ERRORS[t.code]||""},t))];case 3:return[2]}}))}))},t}(BleComboTask_1.BleComboTask);exports.BleComboLLSyncTask=BleComboLLSyncTask;
//# sourceMappingURL=BleComboLLSyncTask.js.map